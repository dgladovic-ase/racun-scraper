const scrapeHtmlWeb = require("./scraper-test");

//list
const list = {
  url: "https://www.ilgiornale.it/sezioni/interni.html?page=1",
  mainSelector: "div.cards",
  list: true,
  childrenSelector: [
    { key: "title", selector: "a .card__title", type: "text" },
    { key: "date", selector: "a .card__date", type: "text" },
    { key: "img", selector: "a picture img", attr: "src" },
    { key: "link", selector: "a", attr: "href" },
  ],
};

//detail
const detail = {
  url: "https://www.ilgiornale.it/video/interni/salvini-giorgia-e-silvio-governeremo-d-amore-e-d-accordo-i-2087130.html",
  mainSelector: ".content-video__main",
  list: false,
  childrenSelector: [
    { key: "video", selector: ".jw-video.jw-reset", attr: "src" },
    { key: "date", selector: ".content__date", type: "text" },
    { key: "img", selector: "figure.content__image picture img", attr: "src" },
    { key: "title", selector: ".content__title", type: "text" },
    { key: "text", selector: ".content__excerpt p", type: "text" },
  ],
};

(async () => {
  const data = await scrapeHtmlWeb(list);
  console.log("example 1 :", data);
})();

/*
  Example 1:
  - retrieve the list of Node versions from the official site
*/

const optionsFirstExample = {
  url: "https://nodejs.org/en/blog/",
  mainSelector: ".blog-index",
  childrenSelector: [
    { key: "date", selector: "time", type: "text" },
    { key: "version", selector: "a", type: "text" },
    { key: "link", selector: "a", attr: "href" },
  ],
};

(async () => {
  // const data = await scrapeHtmlWeb(optionsFirstExample);
  //console.log("example 1 :", data);
})();

/*
  Example 2:
  - second example that integrates the new replace parameter to be able to manipulate strings in selectors
*/

const optionsSecondExample = {
  url: "https://nodejs.org/en/blog/",
  mainSelector: ".blog-index",
  childrenSelector: [
    {
      key: "date",
      selector: "time",
      type: "text",
      replace: (text) => text + " 2022",
    },
    {
      key: "version",
      selector: "a",
      type: "html",
      replace: /[{()}]/g,
    },
    {
      key: "link",
      selector: "a",
      attr: "href",
    },
  ],
};

(async () => {
  // const data = await scrapeHtmlWeb(optionsSecondExample);
  // console.log("example 2 :", data);
})();
